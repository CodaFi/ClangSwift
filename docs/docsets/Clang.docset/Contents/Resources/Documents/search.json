{"Structs/TranslationUnitOptions.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsVACs6UInt32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new TranslationUnitOptions from a raw integer value.</p>","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV4noneACvZ":{"name":"none","abstract":"<p>Used to indicate that no special translation-unit options are needed.</p>","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV27detailedPreprocessingRecordACvZ":{"name":"detailedPreprocessingRecord","abstract":"<p>Used to indicate that the parser should construct a <q>detailed</q>","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV10incompleteACvZ":{"name":"incomplete","abstract":"<p>Used to indicate that the translation unit is incomplete.","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV19precompiledPreambleACvZ":{"name":"precompiledPreamble","abstract":"<p>Used to indicate that the translation unit should be built with an","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV22cacheCompletionResultsACvZ":{"name":"cacheCompletionResults","abstract":"<p>Used to indicate that the translation unit should cache some","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV16forSerializationACvZ":{"name":"forSerialization","abstract":"<p>This option is typically used when parsing a header with the intent of","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV13cxxChainedPCHACvZ":{"name":"cxxChainedPCH","abstract":"<p>DEPRECATED: Enabled chained precompiled preambles in C++.","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV18skipFunctionBodiesACvZ":{"name":"skipFunctionBodies","abstract":"<p>Used to indicate that function/method bodies should be skipped while","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV36includeBriefCommentsInCodeCompletionACvZ":{"name":"includeBriefCommentsInCodeCompletion","abstract":"<p>Used to indicate that brief documentation comments should be included into","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV26createPreambleOnFirstParseACvZ":{"name":"createPreambleOnFirstParse","abstract":"<p>Used to indicate that the precompiled preamble should be created on the","parent_name":"TranslationUnitOptions"},"Structs/TranslationUnitOptions.html#/s:5Clang22TranslationUnitOptionsV9keepGoingACvZ":{"name":"keepGoing","abstract":"<p>Do not stop processing when fatal errors are encountered.","parent_name":"TranslationUnitOptions"},"Structs/SourceRange.html#/s:5Clang11SourceRangeV5startAA0B8LocationVv":{"name":"start","abstract":"<p>Retrieve a source location representing the first character within a","parent_name":"SourceRange"},"Structs/SourceRange.html#/s:5Clang11SourceRangeV3endAA0B8LocationVv":{"name":"end","abstract":"<p>Retrieve a source location representing the last character within a","parent_name":"SourceRange"},"Structs/SourceLocation.html#/s:5Clang14SourceLocationV6cursorAA6Cursor_pSgAA15TranslationUnitC2in_tF":{"name":"cursor(in:)","abstract":"<p>Undocumented</p>","parent_name":"SourceLocation"},"Structs/SourceLocation.html#/s:5Clang14SourceLocationV4lineSiv":{"name":"line","abstract":"<p>The line to which the given source location points.</p>","parent_name":"SourceLocation"},"Structs/SourceLocation.html#/s:5Clang14SourceLocationV6columnSiv":{"name":"column","abstract":"<p>The column to which the given source location points.</p>","parent_name":"SourceLocation"},"Structs/SourceLocation.html#/s:5Clang14SourceLocationV6offsetSiv":{"name":"offset","abstract":"<p>The offset into the buffer to which the given source location points.</p>","parent_name":"SourceLocation"},"Structs/SourceLocation.html#/s:5Clang14SourceLocationV4fileAA4FileVv":{"name":"file","abstract":"<p>The file to which the given source location points.</p>","parent_name":"SourceLocation"},"Structs/CommentToken.html#/s:5Clang12CommentTokenV5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"CommentToken"},"Structs/LiteralToken.html#/s:5Clang12LiteralTokenV5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"LiteralToken"},"Structs/IdentifierToken.html#/s:5Clang15IdentifierTokenV5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"IdentifierToken"},"Structs/KeywordToken.html#/s:5Clang12KeywordTokenV5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"KeywordToken"},"Structs/PunctuationToken.html#/s:5Clang16PunctuationTokenV5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"PunctuationToken"},"Structs/NameRefOptions.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"NameRefOptions"},"Structs/NameRefOptions.html#/s:5Clang14NameRefOptionsVACs6UInt32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new NameRefOptions from a raw integer value.</p>","parent_name":"NameRefOptions"},"Structs/NameRefOptions.html#/s:5Clang14NameRefOptionsV13wantQualifierACvZ":{"name":"wantQualifier","abstract":"<p>Include the nested-name-specifier, e.g. Foo:: in x.Foo::y, in the range.</p>","parent_name":"NameRefOptions"},"Structs/NameRefOptions.html#/s:5Clang14NameRefOptionsV16wantTemplateArgsACvZ":{"name":"wantTemplateArgs","abstract":"<p>Include the explicit template arguments, e.g. <int> in x.f<int>, in the","parent_name":"NameRefOptions"},"Structs/NameRefOptions.html#/s:5Clang14NameRefOptionsV15wantSinglePieceACvZ":{"name":"wantSinglePiece","abstract":"<p>If the name is non-contiguous, return the full spanning range.","parent_name":"NameRefOptions"},"Structs/GlobalOptions.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"GlobalOptions"},"Structs/GlobalOptions.html#/s:5Clang13GlobalOptionsVACs6UInt32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new GlobalOptions from a raw integer value.</p>","parent_name":"GlobalOptions"},"Structs/GlobalOptions.html#/s:5Clang13GlobalOptionsV4noneACvZ":{"name":"none","abstract":"<p>Used to indicate that no special CXIndex options are needed.</p>","parent_name":"GlobalOptions"},"Structs/GlobalOptions.html#/s:5Clang13GlobalOptionsV35threadBackgroundPriorityForIndexingACvZ":{"name":"threadBackgroundPriorityForIndexing","abstract":"<p>Used to indicate that threads that libclang creates for indexing purposes","parent_name":"GlobalOptions"},"Structs/GlobalOptions.html#/s:5Clang13GlobalOptionsV34threadBackgroundPriorityForEditingACvZ":{"name":"threadBackgroundPriorityForEditing","abstract":"<p>Used to indicate that threads that libclang creates for editing purposes","parent_name":"GlobalOptions"},"Structs/GlobalOptions.html#/s:5Clang13GlobalOptionsV30threadBackgroundPriorityForAllACvZ":{"name":"threadBackgroundPriorityForAll","abstract":"<p>Used to indicate that all threads that libclang creates should use","parent_name":"GlobalOptions"},"Structs/ObjCPropertyAttributes.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesVACs6UInt32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new ObjCPropertyAttributes from a raw integer value.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6noattrACvZ":{"name":"noattr","abstract":"<p>The property has no attributes.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV8readonlyACvZ":{"name":"readonly","abstract":"<p>The property was marked readonly.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6getterACvZ":{"name":"getter","abstract":"<p>The property has an explicit name for the <code>getter</code>.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6assignACvZ":{"name":"assign","abstract":"<p>The property has <code>assign</code> semantics.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV9readwriteACvZ":{"name":"readwrite","abstract":"<p>The property was explicitly marked <code>readwrite</code>.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6retainACvZ":{"name":"retain","abstract":"<p>The property has <code>retain</code> semantics.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV4copyACvZ":{"name":"copy","abstract":"<p>The property has <code>copy</code> semantics.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV9nonatomicACvZ":{"name":"nonatomic","abstract":"<p>The property will be read <code>nonatomic</code>ally.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6setterACvZ":{"name":"setter","abstract":"<p>The property has an explicit name for the <code>setter</code>.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6atomicACvZ":{"name":"atomic","abstract":"<p>The property will be read <code>atomic</code>ally.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV4weakACvZ":{"name":"weak","abstract":"<p>The property is a <code>weak</code> reference.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV6strongACvZ":{"name":"strong","abstract":"<p>The property is a <code>strong</code> reference.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV17unsafe_unretainedACvZ":{"name":"unsafe_unretained","abstract":"<p>The property is marked <code>unsafe_unretained</code>.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/ObjCPropertyAttributes.html#/s:5Clang22ObjCPropertyAttributesV5classACvZ":{"name":"class","abstract":"<p>the property is a <code>class</code> property.</p>","parent_name":"ObjCPropertyAttributes"},"Structs/File.html#/s:5Clang4FileV4nameSSv":{"name":"name","abstract":"<p>Retrieve the complete file and path name of the given file.</p>","parent_name":"File"},"Structs/File.html#/s:5Clang4FileV12lastModified10Foundation4DateVv":{"name":"lastModified","abstract":"<p>Retrieve the last modification time of the given file.</p>","parent_name":"File"},"Structs/File.html#/s:5Clang4FileV8uniqueIDAA06UniquebD0VSgv":{"name":"uniqueID","abstract":"<p>Retrieves the unique identifier for this file.","parent_name":"File"},"Structs/File.html#/s:5Clang4FileV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Determines if two files are equal.</p>","parent_name":"File"},"Structs/File.html#/s:5Clang4FileV9hashValueSiv":{"name":"hashValue","abstract":"<p>A unique integer value representing this file.</p>","parent_name":"File"},"Structs/UniqueFileID.html#/s:5Clang12UniqueFileIDV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Determines if two unique file IDs are equal.</p>","parent_name":"UniqueFileID"},"Structs/UniqueFileID.html#/s:5Clang12UniqueFileIDV9hashValueSiv":{"name":"hashValue","abstract":"<p>A unique integer value representing this unique ID.</p>","parent_name":"UniqueFileID"},"Structs/DiagnosticDisplayOptions.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsVACs6UInt32V8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new DiagnosticDisplayOptions from a raw integer value.</p>","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV14sourceLocationACvZ":{"name":"sourceLocation","abstract":"<p>Display the source-location information where the diagnostic was located.","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV6columnACvZ":{"name":"column","abstract":"<p>If displaying the source-location information of the diagnostic, also","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV12sourceRangesACvZ":{"name":"sourceRanges","abstract":"<p>If displaying the source-location information of the diagnostic, also","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV6optionACvZ":{"name":"option","abstract":"<p>Display the option name associated with this diagnostic, if any.","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV10categoryIdACvZ":{"name":"categoryId","abstract":"<p>Display the category number associated with this diagnostic, if any.","parent_name":"DiagnosticDisplayOptions"},"Structs/DiagnosticDisplayOptions.html#/s:5Clang24DiagnosticDisplayOptionsV12categoryNameACvZ":{"name":"categoryName","abstract":"<p>Display the category name associated with this diagnostic, if any.","parent_name":"DiagnosticDisplayOptions"},"Structs/ObjCMessageExpr.html#/s:5Clang15ObjCMessageExprV9parameterAA6Cursor_pSgSi2at_tF":{"name":"parameter(at:)","abstract":"<p>Retrieve the argument cursor of a function or method.","parent_name":"ObjCMessageExpr"},"Structs/ObjCMessageExpr.html#/s:5Clang15ObjCMessageExprV10resultTypeAA5CType_pSgv":{"name":"resultType","abstract":"<p>Retrieve the return type of the function.</p>","parent_name":"ObjCMessageExpr"},"Structs/CallExpr.html#/s:5Clang8CallExprV9parameterAA6Cursor_pSgSi2at_tF":{"name":"parameter(at:)","abstract":"<p>Retrieve the argument cursor of a function or method.","parent_name":"CallExpr"},"Structs/CallExpr.html#/s:5Clang8CallExprV10resultTypeAA5CType_pSgv":{"name":"resultType","abstract":"<p>Retrieve the return type of the function.</p>","parent_name":"CallExpr"},"Structs/EnumDecl.html#/s:5Clang8EnumDeclV9constantsSayAA0b8ConstantC0VGyF":{"name":"constants()","abstract":"<p>Retrieves an array of all the constants as part of this enum.</p>","parent_name":"EnumDecl"},"Structs/EnumDecl.html#/s:5Clang8EnumDeclV11integerTypeAA5CType_pv":{"name":"integerType","abstract":"<p>Retrieve the integer type of an enum declaration.</p>","parent_name":"EnumDecl"},"Structs/EnumConstantDecl.html#/s:5Clang16EnumConstantDeclV5valueSiv":{"name":"value","abstract":"<p>Retrieve the integer value of an enum constant declaration as an <code>Int</code>.</p>","parent_name":"EnumConstantDecl"},"Structs/EnumConstantDecl.html#/s:5Clang16EnumConstantDeclV13unsignedValueSuv":{"name":"unsignedValue","abstract":"<p>Retrieve the integer value of an enum constant declaration as a <code>UInt</code>.</p>","parent_name":"EnumConstantDecl"},"Structs/InclusionDirective.html#/s:5Clang18InclusionDirectiveV12includedFileAA0E0VSgv":{"name":"includedFile","abstract":"<p>Retrieve the file that is included by the given inclusion directive.</p>","parent_name":"InclusionDirective"},"Structs/FunctionDecl.html#/s:5Clang12FunctionDeclV9parameterAA6Cursor_pSgSi2at_tF":{"name":"parameter(at:)","abstract":"<p>Retrieve the argument cursor of a function or method.","parent_name":"FunctionDecl"},"Structs/FunctionDecl.html#/s:5Clang12FunctionDeclV10resultTypeAA5CType_pSgv":{"name":"resultType","abstract":"<p>Retrieve the return type of the function.</p>","parent_name":"FunctionDecl"},"Structs/VerbatimLineComment.html#/s:5Clang19VerbatimLineCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"VerbatimLineComment"},"Structs/VerbatimLineComment.html#/s:5Clang19VerbatimLineCommentV4textSSv":{"name":"text","abstract":"<p>The text of this comment.</p>","parent_name":"VerbatimLineComment"},"Structs/VerbatimBlockLineComment.html#/s:5Clang24VerbatimBlockLineCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"VerbatimBlockLineComment"},"Structs/VerbatimBlockLineComment.html#/s:5Clang24VerbatimBlockLineCommentV4textSSv":{"name":"text","abstract":"<p>The text of this comment.</p>","parent_name":"VerbatimBlockLineComment"},"Structs/VerbatimBlockCommandComment.html#/s:5Clang27VerbatimBlockCommandCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"VerbatimBlockCommandComment"},"Structs/VerbatimBlockCommandComment.html#/s:5Clang27VerbatimBlockCommandCommentV4nameSSv":{"name":"name","abstract":"<p>Retrieves the name of this block command.</p>","parent_name":"VerbatimBlockCommandComment"},"Structs/VerbatimBlockCommandComment.html#/s:5Clang27VerbatimBlockCommandCommentV9argumentss11AnySequenceVySSGv":{"name":"arguments","abstract":"<p>Retrieves all attributes of this HTML start tag.</p>","parent_name":"VerbatimBlockCommandComment"},"Structs/VerbatimBlockCommandComment.html#/s:5Clang27VerbatimBlockCommandCommentV9paragraphAA09ParagraphE0Vv":{"name":"paragraph","abstract":"<p>Retrieves the paragraph argument of the block command.</p>","parent_name":"VerbatimBlockCommandComment"},"Structs/TParamCommandComment.html#/s:5Clang20TParamCommandCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"TParamCommandComment"},"Structs/TParamCommandComment.html#/s:5Clang20TParamCommandCommentV5depthSiv":{"name":"depth","abstract":"<p>Determines the zero-based nesting depth of this parameter in the template","parent_name":"TParamCommandComment"},"Structs/ParamCommandComment.html#/s:5Clang19ParamCommandCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"ParamCommandComment"},"Structs/ParamCommandComment.html#/s:5Clang19ParamCommandCommentV13passDirectionAA0b4PassF0Ov":{"name":"passDirection","abstract":"<p>The direction this parameter is passed by.</p>","parent_name":"ParamCommandComment"},"Structs/ParamCommandComment.html#/s:5Clang19ParamCommandCommentV4nameSSv":{"name":"name","abstract":"<p>Retrieves the name of the declared parameter.</p>","parent_name":"ParamCommandComment"},"Structs/ParamCommandComment.html#/s:5Clang19ParamCommandCommentV12isValidIndexSbv":{"name":"isValidIndex","abstract":"<p>Determine if this parameter is actually a valid parameter in the declared","parent_name":"ParamCommandComment"},"Structs/ParamCommandComment.html#/s:5Clang19ParamCommandCommentV19isExplicitDirectionSbv":{"name":"isExplicitDirection","abstract":"<p>Determines if the parameter&rsquo;s direction was explicitly stated in the","parent_name":"ParamCommandComment"},"Structs/BlockCommandComment.html#/s:5Clang19BlockCommandCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"BlockCommandComment"},"Structs/BlockCommandComment.html#/s:5Clang19BlockCommandCommentV4nameSSv":{"name":"name","abstract":"<p>Retrieves the name of this block command.</p>","parent_name":"BlockCommandComment"},"Structs/BlockCommandComment.html#/s:5Clang19BlockCommandCommentV9argumentss11AnySequenceVySSGv":{"name":"arguments","abstract":"<p>Retrieves all attributes of this HTML start tag.</p>","parent_name":"BlockCommandComment"},"Structs/BlockCommandComment.html#/s:5Clang19BlockCommandCommentV9paragraphAA09ParagraphD0Vv":{"name":"paragraph","abstract":"<p>Retrieves the paragraph argument of the block command.</p>","parent_name":"BlockCommandComment"},"Structs/ParagraphComment.html#/s:5Clang16ParagraphCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"ParagraphComment"},"Structs/HTMLEndTagComment.html#/s:5Clang17HTMLEndTagCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"HTMLEndTagComment"},"Structs/HTMLStartTagComment.html#/s:5Clang19HTMLStartTagCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"HTMLStartTagComment"},"Structs/HTMLStartTagComment.html#/s:5Clang19HTMLStartTagCommentV10attributess11AnySequenceVyAA13HTMLAttributeVGv":{"name":"attributes","abstract":"<p>Retrieves all attributes of this HTML start tag.</p>","parent_name":"HTMLStartTagComment"},"Structs/HTMLAttribute.html#/s:5Clang13HTMLAttributeV4nameSSv":{"name":"name","abstract":"<p>The name of the attribute, which comes before the <code>=</code>.</p>","parent_name":"HTMLAttribute"},"Structs/HTMLAttribute.html#/s:5Clang13HTMLAttributeV5valueSSv":{"name":"value","abstract":"<p>The value in the attribute, which comes after the <code>=</code>.</p>","parent_name":"HTMLAttribute"},"Structs/InlineCommandComment.html#/s:5Clang20InlineCommandCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"InlineCommandComment"},"Structs/InlineCommandComment.html#/s:5Clang20InlineCommandCommentV9argumentss11AnySequenceVySSGv":{"name":"arguments","abstract":"<p>Retrieves all arguments of this inline command.</p>","parent_name":"InlineCommandComment"},"Structs/TextComment.html#/s:5Clang11TextCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"TextComment"},"Structs/TextComment.html#/s:5Clang11TextCommentV4textSSv":{"name":"text","abstract":"<p>Retrieves the text contained in the AST node.</p>","parent_name":"TextComment"},"Structs/FullComment.html#/s:5Clang11FullCommentV5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"FullComment"},"Structs/FullComment.html#/s:5Clang11FullCommentV4htmlSSv":{"name":"html","abstract":"<p>Convert a given full parsed comment to an HTML fragment.","parent_name":"FullComment"},"Structs/FullComment.html#/s:5Clang11FullCommentV3xmlSSv":{"name":"xml","abstract":"<p>Convert a given full parsed comment to an XML document.","parent_name":"FullComment"},"Structs/VariableArrayType.html#/s:5Clang17VariableArrayTypeV7elementAA5CType_pSgv":{"name":"element","abstract":"<p>Undocumented</p>","parent_name":"VariableArrayType"},"Structs/IncompleteArrayType.html#/s:5Clang19IncompleteArrayTypeV7elementAA5CType_pSgv":{"name":"element","abstract":"<p>Undocumented</p>","parent_name":"IncompleteArrayType"},"Structs/ConstantArrayType.html#/s:5Clang17ConstantArrayTypeV7elementAA5CType_pSgv":{"name":"element","abstract":"<p>Undocumented</p>","parent_name":"ConstantArrayType"},"Structs/ConstantArrayType.html#/s:5Clang17ConstantArrayTypeV5counts5Int32Vv":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"ConstantArrayType"},"Structs/PointerType.html#/s:5Clang11PointerTypeV7pointeeAA5CType_pSgv":{"name":"pointee","abstract":"<p>Undocumented</p>","parent_name":"PointerType"},"Structs/RecordType.html#/s:5Clang10RecordTypeV8offsetOfSiSS9fieldName_tKF":{"name":"offsetOf(fieldName:)","abstract":"<p>Computes the offset of a named field in a record of the given type","parent_name":"RecordType"},"Structs/RecordType.html#/s:5Clang10RecordTypeV6fieldsSayAA6Cursor_pGyF":{"name":"fields()","abstract":"<p>Gathers and returns all the fields of this record.</p>","parent_name":"RecordType"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV8platformSSv":{"name":"platform","abstract":"<p>A string that describes the platform for which this structure","parent_name":"PlatformAvailability"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV10introducedAA7VersionVv":{"name":"introduced","abstract":"<p>The version number in which this entity was introduced.</p>","parent_name":"PlatformAvailability"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV10deprecatedAA7VersionVSgv":{"name":"deprecated","abstract":"<p>The version number in which this entity was deprecated (but is","parent_name":"PlatformAvailability"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV9obsoletedAA7VersionVSgv":{"name":"obsoleted","abstract":"<p>The version number in which this entity was obsoleted, and therefore","parent_name":"PlatformAvailability"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV11unavailableSbv":{"name":"unavailable","abstract":"<p>Whether the entity is unconditionally unavailable on this platform.</p>","parent_name":"PlatformAvailability"},"Structs/PlatformAvailability.html#/s:5Clang20PlatformAvailabilityV7messageSSSgv":{"name":"message","abstract":"<p>An optional message to provide to a user of this API, e.g., to","parent_name":"PlatformAvailability"},"Structs/Version.html#/s:5Clang7VersionV5majorSiv":{"name":"major","abstract":"<p>The major version number, e.g., the &lsquo;10&rsquo; in &lsquo;10.7.3&rsquo;.</p>","parent_name":"Version"},"Structs/Version.html#/s:5Clang7VersionV5minorSiv":{"name":"minor","abstract":"<p>The minor version number, e.g., the &lsquo;7&rsquo; in &lsquo;10.7.3&rsquo;. This value will be","parent_name":"Version"},"Structs/Version.html#/s:5Clang7VersionV8subminorSiv":{"name":"subminor","abstract":"<p>The subminor version number, e.g., the &lsquo;3&rsquo; in &lsquo;10.7.3&rsquo;. This value will","parent_name":"Version"},"Structs/Version.html#/s:5Clang7VersionV4zeroACvZ":{"name":"zero","abstract":"<p>Represents a version number for 0.0.0.</p>","parent_name":"Version"},"Structs/Version.html#/s:5Clang7VersionVACSi5major_Si5minorSi8subminortcfc":{"name":"init(major:minor:subminor:)","abstract":"<p>Creates a version with the specified major, minor, and subminor versions.</p>","parent_name":"Version"},"Structs/Availability.html#/s:5Clang12AvailabilityV16alwaysDeprecatedSbv":{"name":"alwaysDeprecated","abstract":"<p>Whether this declaration is unconditionally deprecated for all platforms.</p>","parent_name":"Availability"},"Structs/Availability.html#/s:5Clang12AvailabilityV18deprecationMessageSSSgv":{"name":"deprecationMessage","abstract":"<p>The message to display when alerting someone of this deprecated","parent_name":"Availability"},"Structs/Availability.html#/s:5Clang12AvailabilityV17alwaysUnavailableSbv":{"name":"alwaysUnavailable","abstract":"<p>Whether this declaration is unconditionally unavailable.</p>","parent_name":"Availability"},"Structs/Availability.html#/s:5Clang12AvailabilityV18unavailableMessageSSSgv":{"name":"unavailableMessage","abstract":"<p>The message to display when alerting someone of this unavailable","parent_name":"Availability"},"Structs/Availability.html#/s:5Clang12AvailabilityV9platformsSayAA08PlatformB0VGv":{"name":"platforms","abstract":"<p>The specific availability for all platforms specified for this","parent_name":"Availability"},"Structs/Availability.html":{"name":"Availability","abstract":"<p>Describes the availability of a given declaration for each platform.</p>"},"Structs/Version.html":{"name":"Version","abstract":"<p>Describes a version number of the form <code>&lt;major&gt;.&lt;minor&gt;.&lt;subminor&gt;</code>.</p>"},"Structs/PlatformAvailability.html":{"name":"PlatformAvailability","abstract":"<p>Describes the availability of a given entity on a particular"},"Structs/RecordType.html":{"name":"RecordType","abstract":"<p>MARK: Special Types</p>"},"Structs.html#/s:5Clang11InvalidTypeV":{"name":"InvalidType","abstract":"<p>MARK: Standard Types"},"Structs.html#/s:5Clang13UnexposedTypeV":{"name":"UnexposedType","abstract":"<p>A type whose specific kind is not exposed via this interface.</p>"},"Structs.html#/s:5Clang8VoidTypeV":{"name":"VoidType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8BoolTypeV":{"name":"BoolType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10Char_UTypeV":{"name":"Char_UType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9UCharTypeV":{"name":"UCharType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10Char16TypeV":{"name":"Char16Type","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10Char32TypeV":{"name":"Char32Type","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10UShortTypeV":{"name":"UShortType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8UIntTypeV":{"name":"UIntType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9ULongTypeV":{"name":"ULongType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13ULongLongTypeV":{"name":"ULongLongType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11UInt128TypeV":{"name":"UInt128Type","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10Char_STypeV":{"name":"Char_SType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9SCharTypeV":{"name":"SCharType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9WCharTypeV":{"name":"WCharType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9ShortTypeV":{"name":"ShortType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang7IntTypeV":{"name":"IntType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8LongTypeV":{"name":"LongType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang04LongB4TypeV":{"name":"LongLongType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10Int128TypeV":{"name":"Int128Type","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9FloatTypeV":{"name":"FloatType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10DoubleTypeV":{"name":"DoubleType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14LongDoubleTypeV":{"name":"LongDoubleType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11NullPtrTypeV":{"name":"NullPtrType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12OverloadTypeV":{"name":"OverloadType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13DependentTypeV":{"name":"DependentType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10ObjCIdTypeV":{"name":"ObjCIdType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13ObjCClassTypeV":{"name":"ObjCClassType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11ObjCSelTypeV":{"name":"ObjCSelType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12Float128TypeV":{"name":"Float128Type","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11ComplexTypeV":{"name":"ComplexType","abstract":"<p>Undocumented</p>"},"Structs/PointerType.html":{"name":"PointerType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang16BlockPointerTypeV":{"name":"BlockPointerType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang19LValueReferenceTypeV":{"name":"LValueReferenceType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang19RValueReferenceTypeV":{"name":"RValueReferenceType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8EnumTypeV":{"name":"EnumType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11TypedefTypeV":{"name":"TypedefType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang17ObjCInterfaceTypeV":{"name":"ObjCInterfaceType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang21ObjCObjectPointerTypeV":{"name":"ObjCObjectPointerType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang19FunctionNoProtoTypeV":{"name":"FunctionNoProtoType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang17FunctionProtoTypeV":{"name":"FunctionProtoType","abstract":"<p>Undocumented</p>"},"Structs/ConstantArrayType.html":{"name":"ConstantArrayType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10VectorTypeV":{"name":"VectorType","abstract":"<p>Undocumented</p>"},"Structs/IncompleteArrayType.html":{"name":"IncompleteArrayType","abstract":"<p>Undocumented</p>"},"Structs/VariableArrayType.html":{"name":"VariableArrayType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang23DependentSizedArrayTypeV":{"name":"DependentSizedArrayType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang17MemberPointerTypeV":{"name":"MemberPointerType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8AutoTypeV":{"name":"AutoType","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14ElaboratedTypeV":{"name":"ElaboratedType","abstract":"<p>Represents a type that was referred to using an elaborated type keyword.</p>"},"Structs/FullComment.html":{"name":"FullComment","abstract":"<p>Undocumented</p>"},"Structs/TextComment.html":{"name":"TextComment","abstract":"<p>A plain text comment.</p>"},"Structs/InlineCommandComment.html":{"name":"InlineCommandComment","abstract":"<p>A command with word-like arguments that is considered inline content."},"Structs/HTMLAttribute.html":{"name":"HTMLAttribute","abstract":"<p>Describes the attributes in an HTML tag, for example:</p>"},"Structs/HTMLStartTagComment.html":{"name":"HTMLStartTagComment","abstract":"<p>An HTML start tag with attributes (name-value pairs). Considered inline"},"Structs/HTMLEndTagComment.html":{"name":"HTMLEndTagComment","abstract":"<p>An HTML end tag. Considered inline content."},"Structs/ParagraphComment.html":{"name":"ParagraphComment","abstract":"<p>A paragraph, contains inline comment. The paragraph itself is block content.</p>"},"Structs/BlockCommandComment.html":{"name":"BlockCommandComment","abstract":"<p>A command that has zero or more word-like arguments (number of word-like"},"Structs/ParamCommandComment.html":{"name":"ParamCommandComment","abstract":"<p>A \\param or \\arg command that describes the function parameter (name,"},"Structs/TParamCommandComment.html":{"name":"TParamCommandComment","abstract":"<p>A \\tparam command that describes a template parameter (name and description)."},"Structs/VerbatimBlockCommandComment.html":{"name":"VerbatimBlockCommandComment","abstract":"<p>A verbatim block command (e. g., preformatted code). Verbatim block has an"},"Structs/VerbatimBlockLineComment.html":{"name":"VerbatimBlockLineComment","abstract":"<p>A line of text that is contained within a <code>VerbatimBlockCommand</code>"},"Structs/VerbatimLineComment.html":{"name":"VerbatimLineComment","abstract":"<p>A verbatim line command. Verbatim line has an opening command, a single"},"Structs/FunctionDecl.html":{"name":"FunctionDecl","abstract":"<p>Undocumented</p>"},"Structs/InclusionDirective.html":{"name":"InclusionDirective","abstract":"<p>A <code>#include</code> directive.</p>"},"Structs.html#/s:5Clang10StructDeclV":{"name":"StructDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9ClassDeclV":{"name":"ClassDecl","abstract":"<p>Undocumented</p>"},"Structs/EnumConstantDecl.html":{"name":"EnumConstantDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14MacroExpansionV":{"name":"MacroExpansion","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang18MacroInstantiationV":{"name":"MacroInstantiation","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang15MacroDefinitionV":{"name":"MacroDefinition","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang18CXXAccessSpecifierV":{"name":"CXXAccessSpecifier","abstract":"<p>An access specifier.</p>"},"Structs/EnumDecl.html":{"name":"EnumDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11TypedefDeclV":{"name":"TypedefDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13TypeAliasDeclV":{"name":"TypeAliasDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14UsingDirectiveV":{"name":"UsingDirective","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang16UsingDeclarationV":{"name":"UsingDeclaration","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13UnexposedDeclV":{"name":"UnexposedDecl","abstract":"<p>MARK: Standard Types"},"Structs.html#/s:5Clang9UnionDeclV":{"name":"UnionDecl","abstract":"<p>A C or C++ union.</p>"},"Structs.html#/s:5Clang9FieldDeclV":{"name":"FieldDecl","abstract":"<p>A field (in C) or non-static data member (in C++) in a struct, union, or C++"},"Structs.html#/s:5Clang7VarDeclV":{"name":"VarDecl","abstract":"<p>A variable.</p>"},"Structs.html#/s:5Clang8ParmDeclV":{"name":"ParmDecl","abstract":"<p>A function or method parameter.</p>"},"Structs.html#/s:5Clang17ObjCInterfaceDeclV":{"name":"ObjCInterfaceDecl","abstract":"<p>An Objective-C @interface.</p>"},"Structs.html#/s:5Clang16ObjCCategoryDeclV":{"name":"ObjCCategoryDecl","abstract":"<p>An Objective-C @interface for a category.</p>"},"Structs.html#/s:5Clang16ObjCProtocolDeclV":{"name":"ObjCProtocolDecl","abstract":"<p>An Objective-C @protocol declaration.</p>"},"Structs.html#/s:5Clang16ObjCPropertyDeclV":{"name":"ObjCPropertyDecl","abstract":"<p>An Objective-C @property declaration.</p>"},"Structs.html#/s:5Clang12ObjCIvarDeclV":{"name":"ObjCIvarDecl","abstract":"<p>An Objective-C instance variable.</p>"},"Structs.html#/s:5Clang22ObjCInstanceMethodDeclV":{"name":"ObjCInstanceMethodDecl","abstract":"<p>An Objective-C instance method.</p>"},"Structs.html#/s:5Clang19ObjCClassMethodDeclV":{"name":"ObjCClassMethodDecl","abstract":"<p>An Objective-C class method.</p>"},"Structs.html#/s:5Clang22ObjCImplementationDeclV":{"name":"ObjCImplementationDecl","abstract":"<p>An Objective-C @implementation.</p>"},"Structs.html#/s:5Clang20ObjCCategoryImplDeclV":{"name":"ObjCCategoryImplDecl","abstract":"<p>An Objective-C @implementation for a category.</p>"},"Structs.html#/s:5Clang9CXXMethodV":{"name":"CXXMethod","abstract":"<p>A C++ class method.</p>"},"Structs.html#/s:5Clang9NamespaceV":{"name":"Namespace","abstract":"<p>A C++ namespace.</p>"},"Structs.html#/s:5Clang11LinkageSpecV":{"name":"LinkageSpec","abstract":"<p>A linkage specification, e.g. &lsquo;extern <q>C</q>&rsquo;.</p>"},"Structs.html#/s:5Clang11ConstructorV":{"name":"Constructor","abstract":"<p>A C++ constructor.</p>"},"Structs.html#/s:5Clang10DestructorV":{"name":"Destructor","abstract":"<p>A C++ destructor.</p>"},"Structs.html#/s:5Clang18ConversionFunctionV":{"name":"ConversionFunction","abstract":"<p>A C++ conversion function.</p>"},"Structs.html#/s:5Clang21TemplateTypeParameterV":{"name":"TemplateTypeParameter","abstract":"<p>A C++ template type parameter.</p>"},"Structs.html#/s:5Clang24NonTypeTemplateParameterV":{"name":"NonTypeTemplateParameter","abstract":"<p>A C++ non-type template parameter.</p>"},"Structs.html#/s:5Clang08TemplateB9ParameterV":{"name":"TemplateTemplateParameter","abstract":"<p>A C++ template template parameter.</p>"},"Structs.html#/s:5Clang16FunctionTemplateV":{"name":"FunctionTemplate","abstract":"<p>A C++ function template.</p>"},"Structs.html#/s:5Clang13ClassTemplateV":{"name":"ClassTemplate","abstract":"<p>A C++ class template.</p>"},"Structs.html#/s:5Clang34ClassTemplatePartialSpecializationV":{"name":"ClassTemplatePartialSpecialization","abstract":"<p>A C++ class template partial specialization.</p>"},"Structs.html#/s:5Clang14NamespaceAliasV":{"name":"NamespaceAlias","abstract":"<p>A C++ namespace alias declaration.</p>"},"Structs.html#/s:5Clang18ObjCSynthesizeDeclV":{"name":"ObjCSynthesizeDecl","abstract":"<p>An Objective-C @synthesize definition.</p>"},"Structs.html#/s:5Clang15ObjCDynamicDeclV":{"name":"ObjCDynamicDecl","abstract":"<p>An Objective-C @dynamic definition.</p>"},"Structs.html#/s:5Clang17ObjCSuperClassRefV":{"name":"ObjCSuperClassRef","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang15ObjCProtocolRefV":{"name":"ObjCProtocolRef","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12ObjCClassRefV":{"name":"ObjCClassRef","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang7TypeRefV":{"name":"TypeRef","abstract":"<p>A reference to a type declaration."},"Structs.html#/s:5Clang16CXXBaseSpecifierV":{"name":"CXXBaseSpecifier","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11TemplateRefV":{"name":"TemplateRef","abstract":"<p>A reference to a class template, function template, template"},"Structs.html#/s:5Clang12NamespaceRefV":{"name":"NamespaceRef","abstract":"<p>A reference to a namespace or namespace alias.</p>"},"Structs.html#/s:5Clang9MemberRefV":{"name":"MemberRef","abstract":"<p>A reference to a member of a struct, union, or class that occurs in some"},"Structs.html#/s:5Clang8LabelRefV":{"name":"LabelRef","abstract":"<p>A reference to a labeled statement."},"Structs.html#/s:5Clang17OverloadedDeclRefV":{"name":"OverloadedDeclRef","abstract":"<p>A reference to a set of overloaded functions or function templates that has"},"Structs.html#/s:5Clang11VariableRefV":{"name":"VariableRef","abstract":"<p>A reference to a variable that occurs in some non-expression context, e.g.,"},"Structs.html#/s:5Clang11InvalidFileV":{"name":"InvalidFile","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11NoDeclFoundV":{"name":"NoDeclFound","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14NotImplementedV":{"name":"NotImplemented","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang11InvalidCodeV":{"name":"InvalidCode","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang13UnexposedExprV":{"name":"UnexposedExpr","abstract":"<p>An expression whose specific kind is not exposed via this interface."},"Structs.html#/s:5Clang11DeclRefExprV":{"name":"DeclRefExpr","abstract":"<p>An expression that refers to some value declaration, such as a function,"},"Structs.html#/s:5Clang13MemberRefExprV":{"name":"MemberRefExpr","abstract":"<p>An expression that refers to a member of a struct, union, class, Objective-C"},"Structs/CallExpr.html":{"name":"CallExpr","abstract":"<p>An expression that calls a function.</p>"},"Structs/ObjCMessageExpr.html":{"name":"ObjCMessageExpr","abstract":"<p>An expression that sends a message to an Objective-C object or class.</p>"},"Structs.html#/s:5Clang9BlockExprV":{"name":"BlockExpr","abstract":"<p>An expression that represents a block literal.</p>"},"Structs.html#/s:5Clang14IntegerLiteralV":{"name":"IntegerLiteral","abstract":"<p>An integer literal.</p>"},"Structs.html#/s:5Clang15FloatingLiteralV":{"name":"FloatingLiteral","abstract":"<p>A floating point number literal.</p>"},"Structs.html#/s:5Clang16ImaginaryLiteralV":{"name":"ImaginaryLiteral","abstract":"<p>An imaginary number literal.</p>"},"Structs.html#/s:5Clang13StringLiteralV":{"name":"StringLiteral","abstract":"<p>A string literal.</p>"},"Structs.html#/s:5Clang16CharacterLiteralV":{"name":"CharacterLiteral","abstract":"<p>A character literal.</p>"},"Structs.html#/s:5Clang9ParenExprV":{"name":"ParenExpr","abstract":"<p>A parenthesized expression, e.g. <q>(1)</q>.</p>"},"Structs.html#/s:5Clang13UnaryOperatorV":{"name":"UnaryOperator","abstract":"<p>This represents the unary-expression&rsquo;s (except sizeof and alignof).</p>"},"Structs.html#/s:5Clang18ArraySubscriptExprV":{"name":"ArraySubscriptExpr","abstract":"<p>[C99 6.5.2.1] Array Subscripting.</p>"},"Structs.html#/s:5Clang14BinaryOperatorV":{"name":"BinaryOperator","abstract":"<p>A builtin binary operation expression such as <q>x + y</q> or <q>x <= y</q>.</p>"},"Structs.html#/s:5Clang22CompoundAssignOperatorV":{"name":"CompoundAssignOperator","abstract":"<p>Compound assignment such as <q>+=</q>.</p>"},"Structs.html#/s:5Clang19ConditionalOperatorV":{"name":"ConditionalOperator","abstract":"<p>The ?: ternary operator.</p>"},"Structs.html#/s:5Clang14CStyleCastExprV":{"name":"CStyleCastExpr","abstract":"<p>An explicit cast in C (C99 6.5.4) or a C-style cast in C++ (C++"},"Structs.html#/s:5Clang19CompoundLiteralExprV":{"name":"CompoundLiteralExpr","abstract":"<p>[C99 6.5.2.5]</p>"},"Structs.html#/s:5Clang12InitListExprV":{"name":"InitListExpr","abstract":"<p>Describes an C or C++ initializer list.</p>"},"Structs.html#/s:5Clang13AddrLabelExprV":{"name":"AddrLabelExpr","abstract":"<p>The GNU address of label extension, representing &amp;&amp;label.</p>"},"Structs.html#/s:5Clang8StmtExprV":{"name":"StmtExpr","abstract":"<p>This is the GNU Statement Expression extension: ({int X=4; X;})</p>"},"Structs.html#/s:5Clang20GenericSelectionExprV":{"name":"GenericSelectionExpr","abstract":"<p>Represents a C11 generic selection.</p>"},"Structs.html#/s:5Clang11GNUNullExprV":{"name":"GNUNullExpr","abstract":"<p>Implements the GNU <code>__null</code> extension, which is a name for a null pointer"},"Structs.html#/s:5Clang17CXXStaticCastExprV":{"name":"CXXStaticCastExpr","abstract":"<p>C++&lsquo;s static_cast&lt;&gt; expression.</p>"},"Structs.html#/s:5Clang18CXXDynamicCastExprV":{"name":"CXXDynamicCastExpr","abstract":"<p>C++&lsquo;s dynamic_cast&lt;&gt; expression.</p>"},"Structs.html#/s:5Clang22CXXReinterpretCastExprV":{"name":"CXXReinterpretCastExpr","abstract":"<p>C++&lsquo;s reinterpret_cast&lt;&gt; expression.</p>"},"Structs.html#/s:5Clang16CXXConstCastExprV":{"name":"CXXConstCastExpr","abstract":"<p>C++&lsquo;s const_cast&lt;&gt; expression.</p>"},"Structs.html#/s:5Clang21CXXFunctionalCastExprV":{"name":"CXXFunctionalCastExpr","abstract":"<p>Represents an explicit C++ type conversion that uses <q>functional</q> notion"},"Structs.html#/s:5Clang13CXXTypeidExprV":{"name":"CXXTypeidExpr","abstract":"<p>A C++ typeid expression (C++ [expr.typeid]).</p>"},"Structs.html#/s:5Clang18CXXBoolLiteralExprV":{"name":"CXXBoolLiteralExpr","abstract":"<p>[C++ 2.13.5] C++ Boolean Literal.</p>"},"Structs.html#/s:5Clang21CXXNullPtrLiteralExprV":{"name":"CXXNullPtrLiteralExpr","abstract":"<p>[C++0x 2.14.7] C++ Pointer Literal.</p>"},"Structs.html#/s:5Clang11CXXThisExprV":{"name":"CXXThisExpr","abstract":"<p>Represents the <q>this</q> expression in C++</p>"},"Structs.html#/s:5Clang12CXXThrowExprV":{"name":"CXXThrowExpr","abstract":"<p>This handles &lsquo;throw&rsquo; and &lsquo;throw&rsquo; assignment-expression. When"},"Structs.html#/s:5Clang10CXXNewExprV":{"name":"CXXNewExpr","abstract":"<p>A new expression for memory allocation and constructor calls, e.g: <q>new"},"Structs.html#/s:5Clang13CXXDeleteExprV":{"name":"CXXDeleteExpr","abstract":"<p>A delete expression for memory deallocation and destructor calls, e.g."},"Structs.html#/s:5Clang9UnaryExprV":{"name":"UnaryExpr","abstract":"<p>A unary expression. (noexcept, sizeof, or other traits)</p>"},"Structs.html#/s:5Clang17ObjCStringLiteralV":{"name":"ObjCStringLiteral","abstract":"<p>An Objective-C string literal i.e. <q>foo</q>.</p>"},"Structs.html#/s:5Clang14ObjCEncodeExprV":{"name":"ObjCEncodeExpr","abstract":"<p>An Objective-C @encode expression.</p>"},"Structs.html#/s:5Clang16ObjCSelectorExprV":{"name":"ObjCSelectorExpr","abstract":"<p>An Objective-C @selector expression.</p>"},"Structs.html#/s:5Clang16ObjCProtocolExprV":{"name":"ObjCProtocolExpr","abstract":"<p>An Objective-C @protocol expression.</p>"},"Structs.html#/s:5Clang19ObjCBridgedCastExprV":{"name":"ObjCBridgedCastExpr","abstract":"<p>An Objective-C <q>bridged</q> cast expression, which casts between Objective-C"},"Structs.html#/s:5Clang17PackExpansionExprV":{"name":"PackExpansionExpr","abstract":"<p>Represents a C++0x pack expansion that produces a sequence of expressions."},"Structs.html#/s:5Clang14SizeOfPackExprV":{"name":"SizeOfPackExpr","abstract":"<p>Represents an expression that computes the length of a parameter pack.</p>"},"Structs.html#/s:5Clang10LambdaExprV":{"name":"LambdaExpr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang19ObjCBoolLiteralExprV":{"name":"ObjCBoolLiteralExpr","abstract":"<p>Objective-c Boolean Literal.</p>"},"Structs.html#/s:5Clang12ObjCSelfExprV":{"name":"ObjCSelfExpr","abstract":"<p>Represents the <q>self</q> expression in an Objective-C method.</p>"},"Structs.html#/s:5Clang19OMPArraySectionExprV":{"name":"OMPArraySectionExpr","abstract":"<p>OpenMP 4.0 [2.4, Array Section].</p>"},"Structs.html#/s:5Clang25ObjCAvailabilityCheckExprV":{"name":"ObjCAvailabilityCheckExpr","abstract":"<p>Represents an @available(&hellip;) check.</p>"},"Structs.html#/s:5Clang13UnexposedStmtV":{"name":"UnexposedStmt","abstract":"<p>Unexposed statements have the same operations as any other kind of"},"Structs.html#/s:5Clang9LabelStmtV":{"name":"LabelStmt","abstract":"<p>A labelled statement in a function."},"Structs.html#/s:5Clang12CompoundStmtV":{"name":"CompoundStmt","abstract":"<p>A group of statements like { stmt stmt }."},"Structs.html#/s:5Clang8CaseStmtV":{"name":"CaseStmt","abstract":"<p>A case statement.</p>"},"Structs.html#/s:5Clang11DefaultStmtV":{"name":"DefaultStmt","abstract":"<p>A default statement.</p>"},"Structs.html#/s:5Clang6IfStmtV":{"name":"IfStmt","abstract":"<p>An if statement</p>"},"Structs.html#/s:5Clang10SwitchStmtV":{"name":"SwitchStmt","abstract":"<p>A switch statement.</p>"},"Structs.html#/s:5Clang9WhileStmtV":{"name":"WhileStmt","abstract":"<p>A while statement.</p>"},"Structs.html#/s:5Clang6DoStmtV":{"name":"DoStmt","abstract":"<p>A do statement.</p>"},"Structs.html#/s:5Clang7ForStmtV":{"name":"ForStmt","abstract":"<p>A for statement.</p>"},"Structs.html#/s:5Clang8GotoStmtV":{"name":"GotoStmt","abstract":"<p>A goto statement.</p>"},"Structs.html#/s:5Clang16IndirectGotoStmtV":{"name":"IndirectGotoStmt","abstract":"<p>An indirect goto statement.</p>"},"Structs.html#/s:5Clang12ContinueStmtV":{"name":"ContinueStmt","abstract":"<p>A continue statement.</p>"},"Structs.html#/s:5Clang9BreakStmtV":{"name":"BreakStmt","abstract":"<p>A break statement.</p>"},"Structs.html#/s:5Clang10ReturnStmtV":{"name":"ReturnStmt","abstract":"<p>A return statement.</p>"},"Structs.html#/s:5Clang10GCCAsmStmtV":{"name":"GCCAsmStmt","abstract":"<p>A GCC inline assembly statement extension.</p>"},"Structs.html#/s:5Clang7AsmStmtV":{"name":"AsmStmt","abstract":"<p>A GCC inline assembly statement extension.</p>"},"Structs.html#/s:5Clang13ObjCAtTryStmtV":{"name":"ObjCAtTryStmt","abstract":"<p>Objective-C&rsquo;s overall @try-@catch-@finally statement.</p>"},"Structs.html#/s:5Clang15ObjCAtCatchStmtV":{"name":"ObjCAtCatchStmt","abstract":"<p>Objective-C&rsquo;s @catch statement.</p>"},"Structs.html#/s:5Clang17ObjCAtFinallyStmtV":{"name":"ObjCAtFinallyStmt","abstract":"<p>Objective-C&rsquo;s @finally statement.</p>"},"Structs.html#/s:5Clang15ObjCAtThrowStmtV":{"name":"ObjCAtThrowStmt","abstract":"<p>Objective-C&rsquo;s @throw statement.</p>"},"Structs.html#/s:5Clang22ObjCAtSynchronizedStmtV":{"name":"ObjCAtSynchronizedStmt","abstract":"<p>Objective-C&rsquo;s @synchronized statement.</p>"},"Structs.html#/s:5Clang23ObjCAutoreleasePoolStmtV":{"name":"ObjCAutoreleasePoolStmt","abstract":"<p>Objective-C&rsquo;s autorelease pool statement.</p>"},"Structs.html#/s:5Clang21ObjCForCollectionStmtV":{"name":"ObjCForCollectionStmt","abstract":"<p>Objective-C&rsquo;s collection statement.</p>"},"Structs.html#/s:5Clang12CXXCatchStmtV":{"name":"CXXCatchStmt","abstract":"<p>C++&lsquo;s catch statement.</p>"},"Structs.html#/s:5Clang10CXXTryStmtV":{"name":"CXXTryStmt","abstract":"<p>C++&lsquo;s try statement.</p>"},"Structs.html#/s:5Clang15CXXForRangeStmtV":{"name":"CXXForRangeStmt","abstract":"<p>C++&lsquo;s for (* : *) statement.</p>"},"Structs.html#/s:5Clang10SEHTryStmtV":{"name":"SEHTryStmt","abstract":"<p>Windows Structured Exception Handling&rsquo;s try statement.</p>"},"Structs.html#/s:5Clang13SEHExceptStmtV":{"name":"SEHExceptStmt","abstract":"<p>Windows Structured Exception Handling&rsquo;s except statement.</p>"},"Structs.html#/s:5Clang14SEHFinallyStmtV":{"name":"SEHFinallyStmt","abstract":"<p>Windows Structured Exception Handling&rsquo;s finally statement.</p>"},"Structs.html#/s:5Clang9MSAsmStmtV":{"name":"MSAsmStmt","abstract":"<p>A MS inline assembly statement extension.</p>"},"Structs.html#/s:5Clang8NullStmtV":{"name":"NullStmt","abstract":"<p>This cursor kind is used to describe the null statement."},"Structs.html#/s:5Clang8DeclStmtV":{"name":"DeclStmt","abstract":"<p>Adaptor class for mixing declarations with statements and expressions.</p>"},"Structs.html#/s:5Clang20OMPParallelDirectiveV":{"name":"OMPParallelDirective","abstract":"<p>OpenMP parallel directive.</p>"},"Structs.html#/s:5Clang16OMPSimdDirectiveV":{"name":"OMPSimdDirective","abstract":"<p>OpenMP SIMD directive.</p>"},"Structs.html#/s:5Clang15OMPForDirectiveV":{"name":"OMPForDirective","abstract":"<p>OpenMP for directive.</p>"},"Structs.html#/s:5Clang20OMPSectionsDirectiveV":{"name":"OMPSectionsDirective","abstract":"<p>OpenMP sections directive.</p>"},"Structs.html#/s:5Clang19OMPSectionDirectiveV":{"name":"OMPSectionDirective","abstract":"<p>OpenMP section directive.</p>"},"Structs.html#/s:5Clang18OMPSingleDirectiveV":{"name":"OMPSingleDirective","abstract":"<p>OpenMP single directive.</p>"},"Structs.html#/s:5Clang23OMPParallelForDirectiveV":{"name":"OMPParallelForDirective","abstract":"<p>OpenMP parallel for directive.</p>"},"Structs.html#/s:5Clang28OMPParallelSectionsDirectiveV":{"name":"OMPParallelSectionsDirective","abstract":"<p>OpenMP parallel sections directive.</p>"},"Structs.html#/s:5Clang16OMPTaskDirectiveV":{"name":"OMPTaskDirective","abstract":"<p>OpenMP task directive.</p>"},"Structs.html#/s:5Clang18OMPMasterDirectiveV":{"name":"OMPMasterDirective","abstract":"<p>OpenMP master directive.</p>"},"Structs.html#/s:5Clang20OMPCriticalDirectiveV":{"name":"OMPCriticalDirective","abstract":"<p>OpenMP critical directive.</p>"},"Structs.html#/s:5Clang21OMPTaskyieldDirectiveV":{"name":"OMPTaskyieldDirective","abstract":"<p>OpenMP taskyield directive.</p>"},"Structs.html#/s:5Clang19OMPBarrierDirectiveV":{"name":"OMPBarrierDirective","abstract":"<p>OpenMP barrier directive.</p>"},"Structs.html#/s:5Clang20OMPTaskwaitDirectiveV":{"name":"OMPTaskwaitDirective","abstract":"<p>OpenMP taskwait directive.</p>"},"Structs.html#/s:5Clang17OMPFlushDirectiveV":{"name":"OMPFlushDirective","abstract":"<p>OpenMP flush directive.</p>"},"Structs.html#/s:5Clang12SEHLeaveStmtV":{"name":"SEHLeaveStmt","abstract":"<p>Windows Structured Exception Handling&rsquo;s leave statement.</p>"},"Structs.html#/s:5Clang19OMPOrderedDirectiveV":{"name":"OMPOrderedDirective","abstract":"<p>OpenMP ordered directive.</p>"},"Structs.html#/s:5Clang18OMPAtomicDirectiveV":{"name":"OMPAtomicDirective","abstract":"<p>OpenMP atomic directive.</p>"},"Structs.html#/s:5Clang19OMPForSimdDirectiveV":{"name":"OMPForSimdDirective","abstract":"<p>OpenMP for SIMD directive.</p>"},"Structs.html#/s:5Clang27OMPParallelForSimdDirectiveV":{"name":"OMPParallelForSimdDirective","abstract":"<p>OpenMP parallel for SIMD directive.</p>"},"Structs.html#/s:5Clang18OMPTargetDirectiveV":{"name":"OMPTargetDirective","abstract":"<p>OpenMP target directive.</p>"},"Structs.html#/s:5Clang17OMPTeamsDirectiveV":{"name":"OMPTeamsDirective","abstract":"<p>OpenMP teams directive.</p>"},"Structs.html#/s:5Clang21OMPTaskgroupDirectiveV":{"name":"OMPTaskgroupDirective","abstract":"<p>OpenMP taskgroup directive.</p>"},"Structs.html#/s:5Clang29OMPCancellationPointDirectiveV":{"name":"OMPCancellationPointDirective","abstract":"<p>OpenMP cancellation point directive.</p>"},"Structs.html#/s:5Clang18OMPCancelDirectiveV":{"name":"OMPCancelDirective","abstract":"<p>OpenMP cancel directive.</p>"},"Structs.html#/s:5Clang22OMPTargetDataDirectiveV":{"name":"OMPTargetDataDirective","abstract":"<p>OpenMP target data directive.</p>"},"Structs.html#/s:5Clang20OMPTaskLoopDirectiveV":{"name":"OMPTaskLoopDirective","abstract":"<p>OpenMP taskloop directive.</p>"},"Structs.html#/s:5Clang24OMPTaskLoopSimdDirectiveV":{"name":"OMPTaskLoopSimdDirective","abstract":"<p>OpenMP taskloop simd directive.</p>"},"Structs.html#/s:5Clang22OMPDistributeDirectiveV":{"name":"OMPDistributeDirective","abstract":"<p>OpenMP distribute directive.</p>"},"Structs.html#/s:5Clang27OMPTargetEnterDataDirectiveV":{"name":"OMPTargetEnterDataDirective","abstract":"<p>OpenMP target enter data directive.</p>"},"Structs.html#/s:5Clang26OMPTargetExitDataDirectiveV":{"name":"OMPTargetExitDataDirective","abstract":"<p>OpenMP target exit data directive.</p>"},"Structs.html#/s:5Clang26OMPTargetParallelDirectiveV":{"name":"OMPTargetParallelDirective","abstract":"<p>OpenMP target parallel directive.</p>"},"Structs.html#/s:5Clang29OMPTargetParallelForDirectiveV":{"name":"OMPTargetParallelForDirective","abstract":"<p>OpenMP target parallel for directive.</p>"},"Structs.html#/s:5Clang24OMPTargetUpdateDirectiveV":{"name":"OMPTargetUpdateDirective","abstract":"<p>OpenMP target update directive.</p>"},"Structs.html#/s:5Clang33OMPDistributeParallelForDirectiveV":{"name":"OMPDistributeParallelForDirective","abstract":"<p>OpenMP distribute parallel for directive.</p>"},"Structs.html#/s:5Clang37OMPDistributeParallelForSimdDirectiveV":{"name":"OMPDistributeParallelForSimdDirective","abstract":"<p>OpenMP distribute parallel for simd directive.</p>"},"Structs.html#/s:5Clang26OMPDistributeSimdDirectiveV":{"name":"OMPDistributeSimdDirective","abstract":"<p>OpenMP distribute simd directive.</p>"},"Structs.html#/s:5Clang33OMPTargetParallelForSimdDirectiveV":{"name":"OMPTargetParallelForSimdDirective","abstract":"<p>OpenMP target parallel for simd directive.</p>"},"Structs.html#/s:5Clang21TranslationUnitCursorV":{"name":"TranslationUnitCursor","abstract":"<p>Cursor that represents the translation unit itself."},"Structs.html#/s:5Clang13UnexposedAttrV":{"name":"UnexposedAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12IBActionAttrV":{"name":"IBActionAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12IBOutletAttrV":{"name":"IBOutletAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang22IBOutletCollectionAttrV":{"name":"IBOutletCollectionAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12CXXFinalAttrV":{"name":"CXXFinalAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang15CXXOverrideAttrV":{"name":"CXXOverrideAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12AnnotateAttrV":{"name":"AnnotateAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12AsmLabelAttrV":{"name":"AsmLabelAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang10PackedAttrV":{"name":"PackedAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang8PureAttrV":{"name":"PureAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9ConstAttrV":{"name":"ConstAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang15NoDuplicateAttrV":{"name":"NoDuplicateAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang16CUDAConstantAttrV":{"name":"CUDAConstantAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14CUDADeviceAttrV":{"name":"CUDADeviceAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14CUDAGlobalAttrV":{"name":"CUDAGlobalAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12CUDAHostAttrV":{"name":"CUDAHostAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14CUDASharedAttrV":{"name":"CUDASharedAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang14VisibilityAttrV":{"name":"VisibilityAttr","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9DLLExportV":{"name":"DLLExport","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang9DLLImportV":{"name":"DLLImport","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang22PreprocessingDirectiveV":{"name":"PreprocessingDirective","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang16ModuleImportDeclV":{"name":"ModuleImportDecl","abstract":"<p>A module import declaration.</p>"},"Structs.html#/s:5Clang21TypeAliasTemplateDeclV":{"name":"TypeAliasTemplateDecl","abstract":"<p>Undocumented</p>"},"Structs.html#/s:5Clang12StaticAssertV":{"name":"StaticAssert","abstract":"<p>A static_assert or _Static_assert node</p>"},"Structs.html#/s:5Clang17OverloadCandidateV":{"name":"OverloadCandidate","abstract":"<p>A code completion overload candidate.</p>"},"Structs/DiagnosticDisplayOptions.html":{"name":"DiagnosticDisplayOptions","abstract":"<p>Options to control the display of diagnostics."},"Structs/UniqueFileID.html":{"name":"UniqueFileID","abstract":"<p>Represents a file ID that&rsquo;s unique to each file in a translation unit.</p>"},"Structs/File.html":{"name":"File","abstract":"<p>A particular source file that is part of a translation unit.</p>"},"Structs/ObjCPropertyAttributes.html":{"name":"ObjCPropertyAttributes","abstract":"<p>Property attributes for an Objective-C @property declaration.</p>"},"Structs/GlobalOptions.html":{"name":"GlobalOptions","abstract":"<p>Global options used to inform the Index.</p>"},"Structs/NameRefOptions.html":{"name":"NameRefOptions","abstract":"<p>Undocumented</p>"},"Structs/PunctuationToken.html":{"name":"PunctuationToken","abstract":"<p>A token that contains some kind of punctuation.</p>"},"Structs/KeywordToken.html":{"name":"KeywordToken","abstract":"<p>A language keyword.</p>"},"Structs/IdentifierToken.html":{"name":"IdentifierToken","abstract":"<p>An identifier (that is not a keyword).</p>"},"Structs/LiteralToken.html":{"name":"LiteralToken","abstract":"<p>A numeric, string, or character literal.</p>"},"Structs/CommentToken.html":{"name":"CommentToken","abstract":"<p>A comment.</p>"},"Structs/SourceLocation.html":{"name":"SourceLocation","abstract":"<p>Undocumented</p>"},"Structs/SourceRange.html":{"name":"SourceRange","abstract":"<p>Represents a half-open character range in the source code.</p>"},"Structs/TranslationUnitOptions.html":{"name":"TranslationUnitOptions","abstract":"<p>Flags that control the creation of translation units."},"Protocols/Token.html#/s:5Clang5TokenP5clangSC7CXTokenVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Protocols/Cursor.html#/s:5Clang6CursorP02asA0SC8CXCursorVyF":{"name":"asClang()","abstract":"<p>Converts this cursor value to a CXCursor value to be consumed by","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE11descriptionSSv":{"name":"description","abstract":"<p>Retrieve a name for the entity referenced by this cursor.</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE3usrSSv":{"name":"usr","abstract":"<p>Retrieve a Unified Symbol Resolution (USR) for the entity referenced by","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE10definitionAaB_pSgv":{"name":"definition","abstract":"<p>For a cursor that is either a reference to or a declaration of some","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE11displayNameSSv":{"name":"displayName","abstract":"<p>Retrieve the display name for the entity referenced by this cursor.","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE13lexicalParentAaB_pSgv":{"name":"lexicalParent","abstract":"<p>Determine the lexical parent of the given cursor.","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE14semanticParentAaB_pSgv":{"name":"semanticParent","abstract":"<p>Determine the semantic parent of the given cursor.","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE10referencedAaB_pSgv":{"name":"referenced","abstract":"<p>For a cursor that is a reference, retrieve a cursor representing the","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE4typeAA5CType_pSgv":{"name":"type","abstract":"<p>Retrieves the type of this cursor (if any).</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE15translationUnitAA011TranslationD0Cv":{"name":"translationUnit","abstract":"<p>Returns the translation unit that a cursor originated from.</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE8childrenSayAaB_pGyF":{"name":"children()","abstract":"<p>Retrieves all the children of the provided cursor.</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE9visiblityAA14VisibilityKindOSgv":{"name":"visiblity","abstract":"<p>Describe the visibility of the entity referred to by a cursor.","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE5rangeAA11SourceRangeVv":{"name":"range","abstract":"<p>Retrieve the physical extent of the source construct referenced by the","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE12availabilityAA12AvailabilityVv":{"name":"availability","abstract":"<p>Describes any availability information that specifies if the declaration","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE12storageClassAA07StorageD0OSgv":{"name":"storageClass","abstract":"<p>Returns the storage class for a function or variable declaration.</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE15accessSpecifierAA09CXXAccessD4KindOSgv":{"name":"accessSpecifier","abstract":"<p>Returns the access control level for the referenced object.","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE11fullCommentAA04FullD0VSgv":{"name":"fullComment","abstract":"<p>Given a cursor that represents a documentable entity (e.g.,","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE10rawCommentSSSgv":{"name":"rawComment","abstract":"<p>Given a cursor that represents a declaration, return the associated","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE12briefCommentSSSgv":{"name":"briefComment","abstract":"<p>Given a cursor that represents a documentable entity (e.g.,","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE8languageAA8LanguageOSgv":{"name":"language","abstract":"<p>Determine the <q>language</q> of the entity referred to by a given cursor.</p>","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE8evaluateAA10EvalResultOSgyF":{"name":"evaluate()","abstract":"<p>If cursor is a statement declaration tries to evaluate the statement and","parent_name":"Cursor"},"Protocols/Cursor.html#/s:5Clang6CursorPAAE13visitChildrenyAA16ChildVisitResultOAaB_pcF":{"name":"visitChildren(_:)","abstract":"<p>Visits each of the children of this cursor, calling the provided","parent_name":"Cursor"},"Protocols/Comment.html#/s:5Clang7CommentP5clangSC9CXCommentVv":{"name":"clang","abstract":"<p>Undocumented</p>","parent_name":"Comment"},"Protocols/Comment.html#/s:5Clang7CommentPAAE8childrens11AnySequenceVyAaB_pGv":{"name":"children","abstract":"<p>Retreives all children of this comment.</p>","parent_name":"Comment"},"Protocols/Comment.html#/s:5Clang7CommentPAAE5childAaB_pSgSi2at_tF":{"name":"child(at:)","parent_name":"Comment"},"Protocols/Comment.html#/s:5Clang7CommentPAAE10firstChildAaB_pSgv":{"name":"firstChild","abstract":"<p>The first child of this comment, if there are any children.</p>","parent_name":"Comment"},"Protocols/CType.html#/s:5Clang5CTypeP02asA0SC6CXTypeVyF":{"name":"asClang()","abstract":"<p>Converts the receiver to a <code>CXType</code> to be consumed by the libclang APIs.</p>","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE6sizeOfSiyKF":{"name":"sizeOf()","abstract":"<p>Computes the size of a type in bytes as per C++ [expr.sizeof] standard.</p>","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE7alignOfSiyKF":{"name":"alignOf()","abstract":"<p>Computes the alignment of a type in bytes as per C++[expr.alignof]","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE11descriptionSSv":{"name":"description","abstract":"<p>Pretty-print the underlying type using the rules of the language of the","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE11declarationAA6Cursor_pSgv":{"name":"declaration","abstract":"<p>Retrieves the cursor for the declaration of the receiver.</p>","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE12objcEncodingSSv":{"name":"objcEncoding","abstract":"<p>Retrieves the Objective-C type encoding for the receiver.</p>","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE13canonicalTypeAaB_pv":{"name":"canonicalType","abstract":"<p>Return the canonical type for a CType.","parent_name":"CType"},"Protocols/CType.html#/s:5Clang5CTypePAAE15cxxRefQualifierAA0dE0OSgv":{"name":"cxxRefQualifier","abstract":"<p>Retrieve the ref-qualifier kind of a function or method.","parent_name":"CType"},"Protocols/CType.html":{"name":"CType","abstract":"<p>The type of an element in the abstract syntax tree.</p>"},"Protocols/Comment.html":{"name":"Comment","abstract":"<p>A <code>Comment</code> is a parsed documentation comment in a C/C++/Objective-C source"},"Protocols/Cursor.html":{"name":"Cursor","abstract":"<p>A cursor representing some element in the abstract syntax tree for a"},"Protocols/Token.html":{"name":"Token","abstract":"<p>Represents a C, C++, or Objective-C token.</p>"},"Functions.html#/s:5Clang2eeoiSbAA5CType_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p>Determines if two C types are equal to each other.</p>"},"Functions.html#/s:5Clang2eeoiSbAA6Cursor_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p>Compares two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Cursor.html\">Cursor</a></code>s and determines if they are equivalent.</p>"},"Extensions/TypeAliasCursor.html#/s:5Clang15TypeAliasCursorPAAE10underlyingAA5CType_pSgv":{"name":"underlying","abstract":"<p>Retrieve the underlying type of a typedef declaration.</p>","parent_name":"TypeAliasCursor"},"Extensions/MacroCursor.html#/s:5Clang11MacroCursorPAAE14isFunctionLikeSbv":{"name":"isFunctionLike","abstract":"<p>Determine whether a macro is function like.</p>","parent_name":"MacroCursor"},"Extensions/MacroCursor.html#/s:5Clang11MacroCursorPAAE9isBuiltinSbv":{"name":"isBuiltin","abstract":"<p>Determine whether a macro is a built-in macro.</p>","parent_name":"MacroCursor"},"Extensions/RecordDecl.html#/s:5Clang10RecordDeclPAAE6fieldsSayAA6Cursor_pGyF":{"name":"fields()","abstract":"<p>Retrieves an array of all the fields of this record type.</p>","parent_name":"RecordDecl"},"Extensions/MethodDecl.html#/s:5Clang10MethodDeclPAAE9overridesSayAA6Cursor_pGv":{"name":"overrides","abstract":"<p>Determine the set of methods that are overridden by the given method.","parent_name":"MethodDecl"},"Extensions/CXCursor.html#/s:SC8CXCursorV5ClangE02asB0AByF":{"name":"asClang()","abstract":"<p>Returns <code>self</code> unmodified.</p>","parent_name":"CXCursor"},"Extensions/ClangCursorBacked.html#/s:5Clang0A12CursorBackedPAAE02asA0SC8CXCursorVyF":{"name":"asClang()","abstract":"<p>Returns the underlying CXCursor value</p>","parent_name":"ClangCursorBacked"},"Extensions/CXType.html#/s:SC6CXTypeV5ClangE02asB0AByF":{"name":"asClang()","abstract":"<p>Returns self, unmodified</p>","parent_name":"CXType"},"Extensions/ClangTypeBacked.html#/s:5Clang0A10TypeBackedPAAE02asA0SC6CXTypeVyF":{"name":"asClang()","abstract":"<p>Returns the underlying clang backing store</p>","parent_name":"ClangTypeBacked"},"Extensions/ClangTypeBacked.html":{"name":"ClangTypeBacked"},"Extensions/CXType.html":{"name":"CXType"},"Extensions/ClangCursorBacked.html":{"name":"ClangCursorBacked"},"Extensions/CXCursor.html":{"name":"CXCursor"},"Extensions/MethodDecl.html":{"name":"MethodDecl","abstract":"<p>Undocumented</p>"},"Extensions/RecordDecl.html":{"name":"RecordDecl"},"Extensions/MacroCursor.html":{"name":"MacroCursor","abstract":"<p>Undocumented</p>"},"Extensions/TypeAliasCursor.html":{"name":"TypeAliasCursor","abstract":"<p>Undocumented</p>"},"Enums/Language.html#/s:5Clang8LanguageO1cA2CmF":{"name":"c","abstract":"<p>The C Programming Language</p>","parent_name":"Language"},"Enums/Language.html#/s:5Clang8LanguageO10objectiveCA2CmF":{"name":"objectiveC","abstract":"<p>The Objective-C Programming Language</p>","parent_name":"Language"},"Enums/Language.html#/s:5Clang8LanguageO05cPlusC0A2CmF":{"name":"cPlusPlus","abstract":"<p>The C++ Programming Language</p>","parent_name":"Language"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO7defaultA2CmF":{"name":"default","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO1cA2CmF":{"name":"c","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO10x86StdCallA2CmF":{"name":"x86StdCall","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO11x86FastCallA2CmF":{"name":"x86FastCall","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO11x86ThisCallA2CmF":{"name":"x86ThisCall","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO9x86PascalA2CmF":{"name":"x86Pascal","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO5aapcsA2CmF":{"name":"aapcs","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO9aapcs_vfpA2CmF":{"name":"aapcs_vfp","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO12intelOclBiccA2CmF":{"name":"intelOclBicc","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO11x86_64Win64A2CmF":{"name":"x86_64Win64","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO10x86_64SysVA2CmF":{"name":"x86_64SysV","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO13x86VectorCallA2CmF":{"name":"x86VectorCall","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO5swiftA2CmF":{"name":"swift","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO12preserveMostA2CmF":{"name":"preserveMost","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO11preserveAllA2CmF":{"name":"preserveAll","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:5Clang17CallingConventionO9unexposedA2CmF":{"name":"unexposed","abstract":"<p>Undocumented</p>","parent_name":"CallingConvention"},"Enums/EvalResult.html#/s:5Clang10EvalResultO3intACSicACmF":{"name":"int","abstract":"<p>The cursor evaluated to an integer value.</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO5floatACSdcACmF":{"name":"float","abstract":"<p>The cursor evaluated to a floating-point value.</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO17objcStringLiteralACSScACmF":{"name":"objcStringLiteral","abstract":"<p>The cursor evaluated to an Objective-C String Literal.</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO13stringLiteralACSScACmF":{"name":"stringLiteral","abstract":"<p>The cursor evaluated to a NUL-terminated C String literal (char *).</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO15cfStringLiteralACSScACmF":{"name":"cfStringLiteral","abstract":"<p>The cursor evaluated to a Core Foundation CFString literal.</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO5otherA2CmF":{"name":"other","abstract":"<p>The cursor evaluated to another kind of value, currently unavailable.</p>","parent_name":"EvalResult"},"Enums/EvalResult.html#/s:5Clang10EvalResultO9unexposedA2CmF":{"name":"unexposed","abstract":"<p>The cursor evaluated to an explicitly unexposed value.</p>","parent_name":"EvalResult"},"Enums/LoadDiagError.html#/s:5Clang13LoadDiagErrorO7unknownA2CmF":{"name":"unknown","abstract":"<p>Indicates that an unknown error occurred while attempting to deserialize","parent_name":"LoadDiagError"},"Enums/LoadDiagError.html#/s:5Clang13LoadDiagErrorO06cannotB0A2CmF":{"name":"cannotLoad","abstract":"<p>Indicates that the file containing the serialized diagnostics could not","parent_name":"LoadDiagError"},"Enums/LoadDiagError.html#/s:5Clang13LoadDiagErrorO11invalidFileA2CmF":{"name":"invalidFile","abstract":"<p>Indicates that the serialized diagnostics file is invalid or corrupt.</p>","parent_name":"LoadDiagError"},"Enums/DiagnosticSeverity.html#/s:5Clang18DiagnosticSeverityO7ignoredA2CmF":{"name":"ignored","abstract":"<p>A diagnostic that has been suppressed, e.g., by a command-line option.</p>","parent_name":"DiagnosticSeverity"},"Enums/DiagnosticSeverity.html#/s:5Clang18DiagnosticSeverityO4noteA2CmF":{"name":"note","abstract":"<p>This diagnostic is a note that should be attached to the previous","parent_name":"DiagnosticSeverity"},"Enums/DiagnosticSeverity.html#/s:5Clang18DiagnosticSeverityO7warningA2CmF":{"name":"warning","abstract":"<p>This diagnostic indicates suspicious code that may not be wrong.</p>","parent_name":"DiagnosticSeverity"},"Enums/DiagnosticSeverity.html#/s:5Clang18DiagnosticSeverityO5errorA2CmF":{"name":"error","abstract":"<p>This diagnostic indicates that the code is ill-formed.</p>","parent_name":"DiagnosticSeverity"},"Enums/DiagnosticSeverity.html#/s:5Clang18DiagnosticSeverityO5fatalA2CmF":{"name":"fatal","abstract":"<p>This diagnostic indicates that the code is ill-formed such that future","parent_name":"DiagnosticSeverity"},"Enums/StorageClass.html#/s:5Clang12StorageClassO4noneA2CmF":{"name":"none","abstract":"<p>No storage class was declared for the declaration.</p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO6externA2CmF":{"name":"extern","abstract":"<p>The declaration was declared <code>extern</code>, meaning its value will exist in","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO6staticA2CmF":{"name":"static","abstract":"<p>The declaration was declared static, rendering it inacessible outside this","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO13privateExternA2CmF":{"name":"privateExtern","abstract":"<p>The declaration was declared private extern.</p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO20openCLWorkGroupLocalA2CmF":{"name":"openCLWorkGroupLocal","abstract":"<p>The declaration was declared local to the current OpenCL work group.</p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO4autoA2CmF":{"name":"auto","abstract":"<p>The declaration was declared <code>auto</code>matic.</p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:5Clang12StorageClassO8registerA2CmF":{"name":"register","abstract":"<p>The declaration was declared with the <code>register</code> storage class.</p>","parent_name":"StorageClass"},"Enums/CXXAccessSpecifierKind.html#/s:5Clang22CXXAccessSpecifierKindO6publicA2CmF":{"name":"public","abstract":"<p>The declaration is marked <code>public</code>.</p>","parent_name":"CXXAccessSpecifierKind"},"Enums/CXXAccessSpecifierKind.html#/s:5Clang22CXXAccessSpecifierKindO9protectedA2CmF":{"name":"protected","abstract":"<p>The declaration is marked <code>protected</code>.</p>","parent_name":"CXXAccessSpecifierKind"},"Enums/CXXAccessSpecifierKind.html#/s:5Clang22CXXAccessSpecifierKindO7privateA2CmF":{"name":"private","abstract":"<p>The declaration is marked <code>private</code>.</p>","parent_name":"CXXAccessSpecifierKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO4nullA2CmF":{"name":"null","abstract":"<p>Represents an empty template argument, e.g., one that has not been","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO4typeA2CmF":{"name":"type","abstract":"<p>The template argument is a type, i.e. <code>std::vector&lt;int&gt;</code></p>","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO11declarationA2CmF":{"name":"declaration","abstract":"<p>The template argument is a declaration that was provided for a pointer,","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO7nullPtrA2CmF":{"name":"nullPtr","abstract":"<p>The template argument is a null pointer or null pointer to member that","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO8integralA2CmF":{"name":"integral","abstract":"<p>The template argument is an integral value that was provided for an","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO8templateA2CmF":{"name":"template","abstract":"<p>The template argument is a template name that was provided for a","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO17templateExpansionA2CmF":{"name":"templateExpansion","abstract":"<p>The template argument is a pack expansion of a template name that was","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO10expressionA2CmF":{"name":"expression","abstract":"<p>The template argument is an expression, and we&rsquo;ve not resolved it to one","parent_name":"TemplateArgumentKind"},"Enums/TemplateArgumentKind.html#/s:5Clang20TemplateArgumentKindO4packA2CmF":{"name":"pack","abstract":"<p>The template argument is actually a parameter pack.</p>","parent_name":"TemplateArgumentKind"},"Enums/VisibilityKind.html#/s:5Clang14VisibilityKindO6hiddenA2CmF":{"name":"hidden","abstract":"<p>Symbol not seen by the linker.</p>","parent_name":"VisibilityKind"},"Enums/VisibilityKind.html#/s:5Clang14VisibilityKindO9protectedA2CmF":{"name":"protected","abstract":"<p>Symbol seen by the linker but resolves to a symbol inside this object.</p>","parent_name":"VisibilityKind"},"Enums/VisibilityKind.html#/s:5Clang14VisibilityKindO7defaultA2CmF":{"name":"default","abstract":"<p>Symbol seen by the linker and acts like a normal symbol.</p>","parent_name":"VisibilityKind"},"Enums/ChildVisitResult.html#/s:5Clang16ChildVisitResultO5abortA2CmF":{"name":"abort","abstract":"<p>Stop visitation.</p>","parent_name":"ChildVisitResult"},"Enums/ChildVisitResult.html#/s:5Clang16ChildVisitResultO7recurseA2CmF":{"name":"recurse","abstract":"<p>Recurse into this cursor (if it has children).</p>","parent_name":"ChildVisitResult"},"Enums/ChildVisitResult.html#/s:5Clang16ChildVisitResultO8continueA2CmF":{"name":"continue","abstract":"<p>Continue to the next sibling without visiting this cursor&rsquo;s children.</p>","parent_name":"ChildVisitResult"},"Enums/ParamPassDirection.html#/s:5Clang18ParamPassDirectionO2inA2CmF":{"name":"in","abstract":"<p>The parameter is an input parameter.</p>","parent_name":"ParamPassDirection"},"Enums/ParamPassDirection.html#/s:5Clang18ParamPassDirectionO3outA2CmF":{"name":"out","abstract":"<p>The parameter is an output parameter.</p>","parent_name":"ParamPassDirection"},"Enums/ParamPassDirection.html#/s:5Clang18ParamPassDirectionO5inoutA2CmF":{"name":"inout","abstract":"<p>The parameter is an input and output parameter.</p>","parent_name":"ParamPassDirection"},"Enums/ClangError.html#/s:5Clang0A5ErrorO7failureA2CmF":{"name":"failure","abstract":"<p>Clang had an internal failure while processing the request.</p>","parent_name":"ClangError"},"Enums/ClangError.html#/s:5Clang0A5ErrorO7crashedA2CmF":{"name":"crashed","abstract":"<p>Clang crashed while processing the request.</p>","parent_name":"ClangError"},"Enums/ClangError.html#/s:5Clang0A5ErrorO16invalidArgumentsA2CmF":{"name":"invalidArguments","abstract":"<p>The arguments provided to the clang invocation were invalid.</p>","parent_name":"ClangError"},"Enums/ClangError.html#/s:5Clang0A5ErrorO7astReadA2CmF":{"name":"astRead","abstract":"<p>Clang failed to parse an AST from the provided source file(s).</p>","parent_name":"ClangError"},"Enums/RefQualifier.html#/s:5Clang12RefQualifierO6lvalueA2CmF":{"name":"lvalue","abstract":"<p>An l-value ref qualifier (&amp;)</p>","parent_name":"RefQualifier"},"Enums/RefQualifier.html#/s:5Clang12RefQualifierO6rvalueA2CmF":{"name":"rvalue","abstract":"<p>An r-value ref qualifier (&amp;&amp;)</p>","parent_name":"RefQualifier"},"Enums/TypeLayoutError.html#/s:5Clang15TypeLayoutErrorO7invalidA2CmF":{"name":"invalid","abstract":"<p>The type was invalid</p>","parent_name":"TypeLayoutError"},"Enums/TypeLayoutError.html#/s:5Clang15TypeLayoutErrorO9dependentA2CmF":{"name":"dependent","abstract":"<p>The type was a dependent type</p>","parent_name":"TypeLayoutError"},"Enums/TypeLayoutError.html#/s:5Clang15TypeLayoutErrorO10incompleteA2CmF":{"name":"incomplete","abstract":"<p>The type was incomplete</p>","parent_name":"TypeLayoutError"},"Enums/TypeLayoutError.html#/s:5Clang15TypeLayoutErrorO15notConstantSizeA2CmF":{"name":"notConstantSize","abstract":"<p>The type did not have a constant size</p>","parent_name":"TypeLayoutError"},"Enums/TypeLayoutError.html#/s:5Clang15TypeLayoutErrorO16invalidFieldNameA2CmF":{"name":"invalidFieldName","abstract":"<p>The field specified was not found or invalid</p>","parent_name":"TypeLayoutError"},"Enums/TypeLayoutError.html":{"name":"TypeLayoutError","abstract":"<p>Undocumented</p>"},"Enums/RefQualifier.html":{"name":"RefQualifier","abstract":"<p>Represents the qualifier for C++ methods that determines how the"},"Enums/ClangError.html":{"name":"ClangError","abstract":"<p>Represents the errors that can be thrown by libclang.</p>"},"Enums/ParamPassDirection.html":{"name":"ParamPassDirection","abstract":"<p>Describes parameter passing direction for \\param or \\arg command."},"Enums/ChildVisitResult.html":{"name":"ChildVisitResult","abstract":"<p>Used as the return type for <code>Cursor.visitChildren</code>. Describes what to do"},"Enums/VisibilityKind.html":{"name":"VisibilityKind","abstract":"<p>Describes the visibility of a given symbol at link time.</p>"},"Enums/TemplateArgumentKind.html":{"name":"TemplateArgumentKind","abstract":"<p>Describes the kind of a template argument.</p>"},"Enums/CXXAccessSpecifierKind.html":{"name":"CXXAccessSpecifierKind","abstract":"<p>Represents the C++ access control level to a base class for a cursor.</p>"},"Enums/StorageClass.html":{"name":"StorageClass","abstract":"<p>Represents the storage classes as declared in the source.</p>"},"Enums/DiagnosticSeverity.html":{"name":"DiagnosticSeverity","abstract":"<p>Describes the severity of a particular diagnostic.</p>"},"Enums/LoadDiagError.html":{"name":"LoadDiagError","abstract":"<p>Describes the kind of error that occurred (if any) in a call to"},"Enums/EvalResult.html":{"name":"EvalResult","abstract":"<p>Represents the result of evaluating a CXCursor</p>"},"Enums/CallingConvention.html":{"name":"CallingConvention","abstract":"<p>Describes the calling convention of a function type</p>"},"Enums/Language.html":{"name":"Language","abstract":"<p>The <q>language</q> a given cursor is written in.</p>"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitCACSS8filename_AA5IndexC5indexSaySSG15commandLineArgsAA0bC7OptionsV7optionstKcfc":{"name":"init(filename:index:commandLineArgs:options:)","abstract":"<p>Creates a <code>TranslationUnit</code> by parsing the file at the specified path,","parent_name":"TranslationUnit"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitC6cursorAA6Cursor_pv":{"name":"cursor","abstract":"<p>Retrieve the cursor that represents the given translation unit.","parent_name":"TranslationUnit"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitC13visitChildrenyAA16ChildVisitResultOAA6Cursor_pcF":{"name":"visitChildren(_:)","abstract":"<p>Visits each of the children of this translation unit, calling the","parent_name":"TranslationUnit"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitC8spellingSSv":{"name":"spelling","abstract":"<p>Get the original translation unit source file name.</p>","parent_name":"TranslationUnit"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitC6tokensSayAA5Token_pGAA11SourceRangeV2in_tF":{"name":"tokens(in:)","abstract":"<p>Tokenizes the source code described by the given range into raw lexical","parent_name":"TranslationUnit"},"Classes/TranslationUnit.html#/s:5Clang15TranslationUnitC8annotateSayAA6Cursor_pGSayAA5Token_pG6tokens_tF":{"name":"annotate(tokens:)","abstract":"<p>Annotate the given set of tokens by providing cursors for each token","parent_name":"TranslationUnit"},"Classes/Index.html#/s:5Clang5IndexCACSb26excludeDeclarationsFromPCH_Sb18displayDiagnosticstcfc":{"name":"init(excludeDeclarationsFromPCH:displayDiagnostics:)","abstract":"<p>Creates a new index in which translation units can be created.</p>","parent_name":"Index"},"Classes/Index.html":{"name":"Index","abstract":"<p>An index is a context in which translation units are created.</p>"},"Classes/TranslationUnit.html":{"name":"TranslationUnit","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}